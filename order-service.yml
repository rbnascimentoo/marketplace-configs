server:
  port: 0
spring:
  application:
    name: order-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${ORDER_DB_URL:jdbc:postgresql://localhost:5432/order_db}
    username: ${ORDER_DB_USERNAME:order_user}
    password: ${ORDER_DB_PASSWORD:order_pass}
    hikari:
      maximum-pool-size: ${ORDER_DB_MAX_POOL_SIZE:10}
      minimum-idle: 3
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc.lob.non_contextual_creation: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: order-service
      auto-offset-reset: earliest
      properties:
        spring.json.value.default.type: com.marketplace.order.messaging.OrderEvent
    producer:
      properties:
        linger.ms: 5
        compression.type: snappy
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    base-url: ${ZIPKIN_URL:http://localhost:9411}
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
management:
  endpoint:
    health:
      show-details: when_authorized
  health:
    kafka:
      enabled: true
order:
  payment:
    timeout: 30s
    topic: payment.settlement
  fulfillment:
    retry:
      max-attempts: 3
      backoff: 5s
  integrations:
    product-service:
      base-url: ${PRODUCT_SERVICE_URL:http://product-service}
    user-service:
      base-url: ${USER_SERVICE_URL:http://user-service}
    payment-service:
      base-url: ${PAYMENT_SERVICE_URL:http://payment-service}
    notification-service:
      base-url: ${NOTIFICATION_SERVICE_URL:http://notification-service}
